{"ast":null,"code":"'use strict';\n/**\n * @module JSON\n */\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\nvar constants = require('../runner').constants;\n\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n/**\n * Constructs a new `JSON` reporter instance.\n *\n * @public\n * @class JSON\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\n\nfunction JSONReporter(runner, options) {\n  Base.call(this, runner, options);\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n  runner.on(EVENT_TEST_END, function (test) {\n    tests.push(test);\n  });\n  runner.on(EVENT_TEST_PASS, function (test) {\n    passes.push(test);\n  });\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    failures.push(test);\n  });\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    pending.push(test);\n  });\n  runner.once(EVENT_RUN_END, function () {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n    runner.testResults = obj;\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n}\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @private\n * @param {Object} test\n * @return {Object}\n */\n\n\nfunction clean(test) {\n  var err = test.err || {};\n\n  if (err instanceof Error) {\n    err = errorJSON(err);\n  }\n\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    err: cleanCycles(err)\n  };\n}\n/**\n * Replaces any circular references inside `obj` with '[object Object]'\n *\n * @private\n * @param {Object} obj\n * @return {Object}\n */\n\n\nfunction cleanCycles(obj) {\n  var cache = [];\n  return JSON.parse(JSON.stringify(obj, function (key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.indexOf(value) !== -1) {\n        // Instead of going in a circle, we'll print [object Object]\n        return '' + value;\n      }\n\n      cache.push(value);\n    }\n\n    return value;\n  }));\n}\n/**\n * Transform an Error object into a JSON object.\n *\n * @private\n * @param {Error} err\n * @return {Object}\n */\n\n\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function (key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n\nJSONReporter.description = 'single JSON object';","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/mocha/lib/reporters/json.js"],"names":["Base","require","constants","EVENT_TEST_PASS","EVENT_TEST_FAIL","EVENT_TEST_END","EVENT_RUN_END","EVENT_TEST_PENDING","exports","module","JSONReporter","runner","options","call","self","tests","pending","failures","passes","on","test","push","once","obj","stats","map","clean","testResults","process","stdout","write","JSON","stringify","err","Error","errorJSON","title","fullTitle","file","duration","currentRetry","cleanCycles","cache","parse","key","value","indexOf","res","Object","getOwnPropertyNames","forEach","description"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * @module JSON\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Constructs a new `JSON` reporter instance.\n *\n * @public\n * @class JSON\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction JSONReporter(runner, options) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n\n  runner.on(EVENT_TEST_END, function(test) {\n    tests.push(test);\n  });\n\n  runner.on(EVENT_TEST_PASS, function(test) {\n    passes.push(test);\n  });\n\n  runner.on(EVENT_TEST_FAIL, function(test) {\n    failures.push(test);\n  });\n\n  runner.on(EVENT_TEST_PENDING, function(test) {\n    pending.push(test);\n  });\n\n  runner.once(EVENT_RUN_END, function() {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n\n    runner.testResults = obj;\n\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  var err = test.err || {};\n  if (err instanceof Error) {\n    err = errorJSON(err);\n  }\n\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    err: cleanCycles(err)\n  };\n}\n\n/**\n * Replaces any circular references inside `obj` with '[object Object]'\n *\n * @private\n * @param {Object} obj\n * @return {Object}\n */\nfunction cleanCycles(obj) {\n  var cache = [];\n  return JSON.parse(\n    JSON.stringify(obj, function(key, value) {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.indexOf(value) !== -1) {\n          // Instead of going in a circle, we'll print [object Object]\n          return '' + value;\n        }\n        cache.push(value);\n      }\n\n      return value;\n    })\n  );\n}\n\n/**\n * Transform an Error object into a JSON object.\n *\n * @private\n * @param {Error} err\n * @return {Object}\n */\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function(key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n\nJSONReporter.description = 'single JSON object';\n"]},"metadata":{},"sourceType":"script"}