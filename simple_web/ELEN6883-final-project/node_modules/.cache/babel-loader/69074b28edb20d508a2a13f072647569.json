{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.globSync = exports.glob = void 0;\n\nconst path = __importStar(require(\"path\"));\n\nconst util_1 = __importDefault(require(\"util\"));\n\nasync function glob(pattern) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    default: globModule\n  } = await Promise.resolve().then(() => __importStar(require(\"glob\")));\n  const files = await util_1.default.promisify(globModule)(pattern, options);\n  return files.map(path.normalize);\n}\n\nexports.glob = glob;\n\nfunction globSync(pattern) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  const files = require(\"glob\").sync(pattern, options);\n\n  return files.map(path.normalize);\n}\n\nexports.globSync = globSync;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAEO,eAAeA,IAAf,CACLC,OADK,EAEoB;AAAA,MAAzBC,OAAyB,uEAAF,EAAE;AAEzB,QAAM;AAAEC,WAAO,EAAEC;AAAX,MAA0B,wDAAa,MAAb,GAAhC;AACA,QAAMC,KAAK,GAAG,MAAMC,eAAKC,SAAL,CAAeH,UAAf,EAA2BH,OAA3B,EAAoCC,OAApC,CAApB;AACA,SAAOG,KAAK,CAACG,GAAN,CAAUC,IAAI,CAACC,SAAf,CAAP;AACD;;AAPDC;;AASA,SAAgBC,QAAhB,CAAyBX,OAAzB,EAAmE;AAAA,MAAzBC,OAAyB,uEAAF,EAAE;;AACjE,QAAMG,KAAK,GAAGQ,OAAO,CAAC,MAAD,CAAP,CAAgBC,IAAhB,CAAqBb,OAArB,EAA8BC,OAA9B,CAAd;;AACA,SAAOG,KAAK,CAACG,GAAN,CAAUC,IAAI,CAACC,SAAf,CAAP;AACD;;AAHDC","names":["glob","pattern","options","default","globModule","files","util_1","promisify","map","path","normalize","exports","globSync","require","sync"],"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/hardhat/src/internal/util/glob.ts"],"sourcesContent":["import type { IOptions as GlobOptions } from \"glob\";\nimport * as path from \"path\";\nimport util from \"util\";\n\nexport async function glob(\n  pattern: string,\n  options: GlobOptions = {}\n): Promise<string[]> {\n  const { default: globModule } = await import(\"glob\");\n  const files = await util.promisify(globModule)(pattern, options);\n  return files.map(path.normalize);\n}\n\nexport function globSync(pattern: string, options: GlobOptions = {}): string[] {\n  const files = require(\"glob\").sync(pattern, options);\n  return files.map(path.normalize);\n}\n"]},"metadata":{},"sourceType":"script"}