{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SentryError } from '@sentry/utils';\nimport * as http from 'http';\nimport { BaseTransport } from './base';\n/** Node http module transport */\n\nvar HTTPTransport =\n/** @class */\nfunction (_super) {\n  __extends(HTTPTransport, _super);\n  /** Create a new instance and set this.agent */\n\n\n  function HTTPTransport(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.options = options;\n    var proxy = options.httpProxy || process.env.http_proxy;\n    _this.module = http;\n    _this.client = proxy ? new (require('https-proxy-agent'))(proxy) : new http.Agent({\n      keepAlive: false,\n      maxSockets: 30,\n      timeout: 2000\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  HTTPTransport.prototype.sendEvent = function (event) {\n    if (!this.module) {\n      throw new SentryError('No module available in HTTPTransport');\n    }\n\n    return this._sendWithModule(this.module, event);\n  };\n\n  return HTTPTransport;\n}(BaseTransport);\n\nexport { HTTPTransport };","map":{"version":3,"mappings":";AACA,SAASA,WAAT,QAA4B,eAA5B;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEA,SAASC,aAAT,QAA8B,QAA9B;AAEA;;AACA;AAAA;AAAA;AAAmCC;AACjC;;;AACA,yBAA0BC,OAA1B,EAAmD;AAAnD,gBACEC,kBAAMD,OAAN,KAAc,IADhB;;AAA0BE;AAExB,QAAMC,KAAK,GAAGH,OAAO,CAACI,SAAR,IAAqBC,OAAO,CAACC,GAAR,CAAYC,UAA/C;AACAL,SAAI,CAACM,MAAL,GAAcX,IAAd;AACAK,SAAI,CAACO,MAAL,GAAcN,KAAK,GACd,KAAKO,OAAO,CAAC,mBAAD,CAAZ,EAAmCP,KAAnC,CADc,GAEf,IAAIN,IAAI,CAACc,KAAT,CAAe;AAAEC,eAAS,EAAE,KAAb;AAAoBC,gBAAU,EAAE,EAAhC;AAAoCC,aAAO,EAAE;AAA7C,KAAf,CAFJ;;AAGD;AAED;;;;;AAGOC,sCAAP,UAAiBC,KAAjB,EAA6B;AAC3B,QAAI,CAAC,KAAKR,MAAV,EAAkB;AAChB,YAAM,IAAIZ,WAAJ,CAAgB,sCAAhB,CAAN;AACD;;AACD,WAAO,KAAKqB,eAAL,CAAqB,KAAKT,MAA1B,EAAkCQ,KAAlC,CAAP;AACD,GALM;;AAMT;AApBA,EAAmClB,aAAnC","names":["SentryError","http","BaseTransport","__extends","options","_super","_this","proxy","httpProxy","process","env","http_proxy","module","client","require","Agent","keepAlive","maxSockets","timeout","HTTPTransport","event","_sendWithModule"],"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/@sentry/node/src/transports/http.ts"],"sourcesContent":["import { Event, Response, TransportOptions } from '@sentry/types';\nimport { SentryError } from '@sentry/utils';\nimport * as http from 'http';\n\nimport { BaseTransport } from './base';\n\n/** Node http module transport */\nexport class HTTPTransport extends BaseTransport {\n  /** Create a new instance and set this.agent */\n  public constructor(public options: TransportOptions) {\n    super(options);\n    const proxy = options.httpProxy || process.env.http_proxy;\n    this.module = http;\n    this.client = proxy\n      ? (new (require('https-proxy-agent'))(proxy) as http.Agent)\n      : new http.Agent({ keepAlive: false, maxSockets: 30, timeout: 2000 });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): Promise<Response> {\n    if (!this.module) {\n      throw new SentryError('No module available in HTTPTransport');\n    }\n    return this._sendWithModule(this.module, event);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}