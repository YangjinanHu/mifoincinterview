{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils'; // \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\n\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\n\nvar InboundFilters =\n/** @class */\nfunction () {\n  function InboundFilters(_options) {\n    if (_options === void 0) {\n      _options = {};\n    }\n\n    this._options = _options;\n    /**\n     * @inheritDoc\n     */\n\n    this.name = InboundFilters.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  InboundFilters.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event) {\n      var hub = getCurrentHub();\n\n      if (!hub) {\n        return event;\n      }\n\n      var self = hub.getIntegration(InboundFilters);\n\n      if (self) {\n        var client = hub.getClient();\n        var clientOptions = client ? client.getOptions() : {};\n\n        var options = self._mergeOptions(clientOptions);\n\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n\n      return event;\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._shouldDropEvent = function (event, options) {\n    if (this._isSentryError(event, options)) {\n      logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n\n    return false;\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isSentryError = function (event, options) {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return event && event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].type === 'SentryError' || false;\n    } catch (_oO) {\n      return false;\n    }\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isIgnoredError = function (event, options) {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(function (message) {\n      // Not sure why TypeScript complains here...\n      return options.ignoreErrors.some(function (pattern) {\n        return isMatchingPattern(message, pattern);\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isDeniedUrl = function (event, options) {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n\n    var url = this._getEventFilterUrl(event);\n\n    return !url ? false : options.denyUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isAllowedUrl = function (event, options) {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n\n    var url = this._getEventFilterUrl(event);\n\n    return !url ? true : options.allowUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._mergeOptions = function (clientOptions) {\n    if (clientOptions === void 0) {\n      clientOptions = {};\n    }\n\n    return {\n      allowUrls: __spread(this._options.whitelistUrls || [], this._options.allowUrls || [], clientOptions.whitelistUrls || [], clientOptions.allowUrls || []),\n      denyUrls: __spread(this._options.blacklistUrls || [], this._options.denyUrls || [], clientOptions.blacklistUrls || [], clientOptions.denyUrls || []),\n      ignoreErrors: __spread(this._options.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true\n    };\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._getPossibleEventMessages = function (event) {\n    if (event.message) {\n      return [event.message];\n    }\n\n    if (event.exception) {\n      try {\n        var _a = event.exception.values && event.exception.values[0] || {},\n            _b = _a.type,\n            type = _b === void 0 ? '' : _b,\n            _c = _a.value,\n            value = _c === void 0 ? '' : _c;\n\n        return [\"\" + value, type + \": \" + value];\n      } catch (oO) {\n        logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n        return [];\n      }\n    }\n\n    return [];\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._getEventFilterUrl = function (event) {\n    try {\n      if (event.stacktrace) {\n        var frames_1 = event.stacktrace.frames;\n        return frames_1 && frames_1[frames_1.length - 1].filename || null;\n      }\n\n      if (event.exception) {\n        var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return frames_2 && frames_2[frames_2.length - 1].filename || null;\n      }\n\n      return null;\n    } catch (oO) {\n      logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  InboundFilters.id = 'InboundFilters';\n  return InboundFilters;\n}();\n\nexport { InboundFilters };","map":{"version":3,"mappings":"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","names":["addGlobalEventProcessor","getCurrentHub","getEventDescription","isMatchingPattern","logger","DEFAULT_IGNORE_ERRORS","_options","InboundFilters","id","event","hub","self","getIntegration","client","getClient","clientOptions","getOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","warn","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreInternal","exception","values","type","_oO","ignoreErrors","length","_getPossibleEventMessages","some","message","pattern","denyUrls","url","allowUrls","whitelistUrls","blacklistUrls","_b","_c","value","oO","error","stacktrace","frames_1","frames","filename","frames_2"],"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/@sentry/core/src/integrations/inboundfilters.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isDeniedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isAllowedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: Partial<InboundFiltersOptions> = {}): Partial<InboundFiltersOptions> {\n    return {\n      allowUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.whitelistUrls || []),\n        ...(this._options.allowUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.whitelistUrls || []),\n        ...(clientOptions.allowUrls || []),\n      ],\n      denyUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.blacklistUrls || []),\n        ...(this._options.denyUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.blacklistUrls || []),\n        ...(clientOptions.denyUrls || []),\n      ],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}