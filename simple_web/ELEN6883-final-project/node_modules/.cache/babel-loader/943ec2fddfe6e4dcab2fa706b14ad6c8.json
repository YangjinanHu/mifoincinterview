{"ast":null,"code":"var _jsxFileName = \"/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/src/frontend/components/MyListedItems.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport poetry from './genres_images/poetry.png';\nimport humor from './genres_images/humor.png';\nimport drama from './genres_images/drama.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genre_image = {\n  \"Drama\": drama,\n  \"Humor\": humor,\n  \"Poetry\": poetry\n};\n\nfunction renderSoldItems(items) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 4,\n      className: \"g-4 py-3\",\n      children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        className: \"overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [\"For \", ethers.utils.formatEther(item.totalPrice), \" ETH - Recieved \", ethers.utils.formatEther(item.price), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            color: \"secondary\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => {\n              e.preventDefault();\n              window.open(item.data_link, \"_blank\");\n            },\n            children: \" View Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default function MyListedItems(_ref) {\n  _s();\n\n  let {\n    marketplace,\n    nft,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState([]);\n  const [soldItems, setSoldItems] = useState([]);\n\n  const loadListedItems = async () => {\n    // Load all sold items that the user listed\n    const itemCount = await marketplace.itemCount();\n    let listedItems = [];\n    let soldItems = [];\n\n    for (let indx = 1; indx <= itemCount; indx++) {\n      const i = await marketplace.items(indx);\n\n      if (i.seller.toLowerCase() === account) {\n        // get uri url from nft contract\n        const uri = await nft.tokenURI(i.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n        const response = await fetch(uri);\n        const metadata = await response.json(); // get total price of item (item price + fee)\n\n        const totalPrice = await marketplace.getTotalPrice(i.itemId); // define listed item object\n\n        let item = {\n          totalPrice,\n          price: i.price,\n          itemId: i.itemId,\n          name: metadata.name,\n          description: metadata.description,\n          image: genre_image[metadata.genre],\n          data_link: metadata.image\n        };\n        listedItems.push(item); // Add listed item to sold items array if sold\n\n        if (i.sold) soldItems.push(item);\n      }\n    }\n\n    setLoading(false);\n    setListedItems(listedItems);\n    setSoldItems(soldItems);\n  };\n\n  useEffect(() => {\n    loadListedItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: listedItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 py-3 container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Listed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-3\",\n        children: listedItems.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              color: \"secondary\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => {\n                e.preventDefault();\n                window.open(item.data_link, \"_blank\");\n              },\n              children: \" View Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), soldItems.length > 0 && renderSoldItems(soldItems)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No listed assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyListedItems, \"YKQVEgz6qFQ3U3g/oOtZQBBT2+0=\");\n\n_c = MyListedItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyListedItems\");","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/src/frontend/components/MyListedItems.js"],"names":["useState","useEffect","ethers","Row","Col","Card","Button","poetry","humor","drama","genre_image","renderSoldItems","items","map","item","idx","image","utils","formatEther","totalPrice","price","name","description","e","preventDefault","window","open","data_link","MyListedItems","marketplace","nft","account","loading","setLoading","listedItems","setListedItems","soldItems","setSoldItems","loadListedItems","itemCount","indx","i","seller","toLowerCase","uri","tokenURI","tokenId","response","fetch","metadata","json","getTotalPrice","itemId","genre","push","sold","padding","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport poetry from './genres_images/poetry.png'\nimport humor from './genres_images/humor.png'\nimport drama from './genres_images/drama.png'\n\nconst genre_image = {\n  \"Drama\": drama,\n  \"Humor\": humor,\n  \"Poetry\": poetry\n}\n\nfunction renderSoldItems(items) {\n  return (\n    <>\n      <h2>Sold</h2>\n      <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n        {items.map((item, idx) => (\n          <Col key={idx} className=\"overflow-hidden\">\n            <Card>\n              <Card.Img variant=\"top\" src={item.image} />\n              <Card.Footer>\n                For {ethers.utils.formatEther(item.totalPrice)} ETH - Recieved {ethers.utils.formatEther(item.price)} ETH\n              </Card.Footer>\n              <Card.Body color=\"secondary\">\n                <Card.Title>{item.name}</Card.Title>\n                <Card.Text>\n                  {item.description}\n                </Card.Text>\n              </Card.Body>\n              <button\n                type=\"button\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.open(item.data_link, \"_blank\");\n                }}\n              > View Content</button>\n\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\n\nexport default function MyListedItems({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true)\n  const [listedItems, setListedItems] = useState([])\n  const [soldItems, setSoldItems] = useState([])\n  const loadListedItems = async () => {\n    // Load all sold items that the user listed\n    const itemCount = await marketplace.itemCount()\n    let listedItems = []\n    let soldItems = []\n    for (let indx = 1; indx <= itemCount; indx++) {\n      const i = await marketplace.items(indx)\n      if (i.seller.toLowerCase() === account) {\n        // get uri url from nft contract\n        const uri = await nft.tokenURI(i.tokenId)\n        // use uri to fetch the nft metadata stored on ipfs \n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(i.itemId)\n        // define listed item object\n        let item = {\n          totalPrice,\n          price: i.price,\n          itemId: i.itemId,\n          name: metadata.name,\n          description: metadata.description,\n          image: genre_image[metadata.genre],\n          data_link: metadata.image\n        }\n        listedItems.push(item)\n        // Add listed item to sold items array if sold\n        if (i.sold) soldItems.push(item)\n      }\n    }\n    setLoading(false)\n    setListedItems(listedItems)\n    setSoldItems(soldItems)\n  }\n  useEffect(() => {\n    loadListedItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {listedItems.length > 0 ?\n        <div className=\"px-5 py-3 container\">\n          <h2>Listed</h2>\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n            {listedItems.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Body color=\"secondary\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <Card.Text>\n                      {item.description}\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      window.open(item.data_link, \"_blank\");\n                    }}\n                  > View Content</button>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n          {soldItems.length > 0 && renderSoldItems(soldItems)}\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )\n      }\n    </div >\n  );\n}"]},"metadata":{},"sourceType":"module"}