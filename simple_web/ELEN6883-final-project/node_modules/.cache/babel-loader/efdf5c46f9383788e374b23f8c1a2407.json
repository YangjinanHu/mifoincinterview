{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VmError = exports.ERROR = void 0;\nvar ERROR;\n\n(function (ERROR) {\n  ERROR[\"OUT_OF_GAS\"] = \"out of gas\";\n  ERROR[\"CODESTORE_OUT_OF_GAS\"] = \"code store out of gas\";\n  ERROR[\"STACK_UNDERFLOW\"] = \"stack underflow\";\n  ERROR[\"STACK_OVERFLOW\"] = \"stack overflow\";\n  ERROR[\"INVALID_JUMP\"] = \"invalid JUMP\";\n  ERROR[\"INVALID_OPCODE\"] = \"invalid opcode\";\n  ERROR[\"OUT_OF_RANGE\"] = \"value out of range\";\n  ERROR[\"REVERT\"] = \"revert\";\n  ERROR[\"STATIC_STATE_CHANGE\"] = \"static state change\";\n  ERROR[\"INTERNAL_ERROR\"] = \"internal error\";\n  ERROR[\"CREATE_COLLISION\"] = \"create collision\";\n  ERROR[\"STOP\"] = \"stop\";\n  ERROR[\"REFUND_EXHAUSTED\"] = \"refund exhausted\";\n  ERROR[\"VALUE_OVERFLOW\"] = \"value overflow\";\n  ERROR[\"INVALID_BEGINSUB\"] = \"invalid BEGINSUB\";\n  ERROR[\"INVALID_RETURNSUB\"] = \"invalid RETURNSUB\";\n  ERROR[\"INVALID_JUMPSUB\"] = \"invalid JUMPSUB\";\n  ERROR[\"INVALID_BYTECODE_RESULT\"] = \"invalid bytecode deployed\"; // BLS errors\n\n  ERROR[\"BLS_12_381_INVALID_INPUT_LENGTH\"] = \"invalid input length\";\n  ERROR[\"BLS_12_381_POINT_NOT_ON_CURVE\"] = \"point not on curve\";\n  ERROR[\"BLS_12_381_INPUT_EMPTY\"] = \"input is empty\";\n  ERROR[\"BLS_12_381_FP_NOT_IN_FIELD\"] = \"fp point not in field\";\n})(ERROR = exports.ERROR || (exports.ERROR = {}));\n\nclass VmError {\n  constructor(error) {\n    this.error = error;\n    this.errorType = 'VmError';\n  }\n\n}\n\nexports.VmError = VmError;","map":{"version":3,"mappings":";;;;;;AAAA,IAAYA,KAAZ;;AAAA,WAAYA,KAAZ,EAAiB;AACfA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA,iEAlBe,CAoBf;;AACAA;AACAA;AACAA;AACAA;AACD,CAzBD,EAAYA,KAAK,GAALC,kCAAK,EAAL,CAAZ;;AA2BA,MAAaC,OAAb,CAAoB;AAIlBC,cAAYC,KAAZ,EAAwB;AACtB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiB,SAAjB;AACD;;AAPiB;;AAApBJ","names":["ERROR","exports","VmError","constructor","error","errorType"],"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/@ethereumjs/vm/src/exceptions.ts"],"sourcesContent":["export enum ERROR {\n  OUT_OF_GAS = 'out of gas',\n  CODESTORE_OUT_OF_GAS = 'code store out of gas',\n  STACK_UNDERFLOW = 'stack underflow',\n  STACK_OVERFLOW = 'stack overflow',\n  INVALID_JUMP = 'invalid JUMP',\n  INVALID_OPCODE = 'invalid opcode',\n  OUT_OF_RANGE = 'value out of range',\n  REVERT = 'revert',\n  STATIC_STATE_CHANGE = 'static state change',\n  INTERNAL_ERROR = 'internal error',\n  CREATE_COLLISION = 'create collision',\n  STOP = 'stop',\n  REFUND_EXHAUSTED = 'refund exhausted',\n  VALUE_OVERFLOW = 'value overflow',\n  INVALID_BEGINSUB = 'invalid BEGINSUB',\n  INVALID_RETURNSUB = 'invalid RETURNSUB',\n  INVALID_JUMPSUB = 'invalid JUMPSUB',\n  INVALID_BYTECODE_RESULT = 'invalid bytecode deployed',\n\n  // BLS errors\n  BLS_12_381_INVALID_INPUT_LENGTH = 'invalid input length',\n  BLS_12_381_POINT_NOT_ON_CURVE = 'point not on curve',\n  BLS_12_381_INPUT_EMPTY = 'input is empty',\n  BLS_12_381_FP_NOT_IN_FIELD = 'fp point not in field',\n}\n\nexport class VmError {\n  error: ERROR\n  errorType: string\n\n  constructor(error: ERROR) {\n    this.error = error\n    this.errorType = 'VmError'\n  }\n}\n"]},"metadata":{},"sourceType":"script"}