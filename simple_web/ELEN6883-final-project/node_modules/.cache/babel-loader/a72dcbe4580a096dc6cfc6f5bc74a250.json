{"ast":null,"code":"var _jsxFileName = \"/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/src/frontend/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genre_image = {\n  \"Drama\": \"./genres_images/drama.png\",\n  \"Humor\": \"./genres_images/humor.png\",\n  \"Poetry\": \"./genres_images/poetry.png\"\n};\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    marketplace,\n    nft\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n\n  const loadMarketplaceItems = async () => {\n    // Load all unsold items\n    const itemCount = await marketplace.itemCount();\n    let items = [];\n\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i);\n\n      if (!item.sold) {\n        // get uri url from nft contract\n        const uri = await nft.tokenURI(item.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n        const response = await fetch(uri);\n        const metadata = await response.json(); // get total price of item (item price + fee)\n\n        const totalPrice = await marketplace.getTotalPrice(item.itemId);\n        console.log(\"metadata: \", metadata); // Add item to items array\n\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          // image: metadata.image\n          image: genre_image[metadata.genre]\n        });\n        console.log(\"items \", items);\n      }\n    }\n\n    setLoading(false);\n    setItems(items);\n  };\n\n  const buyMarketItem = async item => {\n    await (await marketplace.purchaseItem(item.itemId, {\n      value: item.totalPrice\n    })).wait();\n    loadMarketplaceItems();\n  };\n\n  useEffect(() => {\n    loadMarketplaceItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-5\",\n        children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              color: \"secondary\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => buyMarketItem(item),\n                  variant: \"primary\",\n                  size: \"lg\",\n                  children: [\"Buy for \", ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No listed assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"X4x04bf2XOIdWC9JIzBW7u2/seA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/src/frontend/components/Home.js"],"names":["useState","useEffect","ethers","Row","Col","Card","Button","genre_image","Home","marketplace","nft","loading","setLoading","items","setItems","loadMarketplaceItems","itemCount","i","item","sold","uri","tokenURI","tokenId","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","console","log","push","seller","name","description","image","genre","buyMarketItem","purchaseItem","value","wait","padding","length","map","idx","utils","formatEther"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nconst genre_image = {\n    \"Drama\": \"./genres_images/drama.png\",\n    \"Humor\": \"./genres_images/humor.png\",\n    \"Poetry\": \"./genres_images/poetry.png\"\n}\n\n\nconst Home = ({ marketplace, nft }) => {\n    const [loading, setLoading] = useState(true)\n    const [items, setItems] = useState([])\n    const loadMarketplaceItems = async () => {\n        // Load all unsold items\n        const itemCount = await marketplace.itemCount()\n        let items = []\n        for (let i = 1; i <= itemCount; i++) {\n            const item = await marketplace.items(i)\n            if (!item.sold) {\n                // get uri url from nft contract\n                const uri = await nft.tokenURI(item.tokenId)\n                // use uri to fetch the nft metadata stored on ipfs \n                const response = await fetch(uri)\n                const metadata = await response.json()\n                // get total price of item (item price + fee)\n                const totalPrice = await marketplace.getTotalPrice(item.itemId)\n                console.log(\"metadata: \", metadata)\n                // Add item to items array\n                items.push({\n                    totalPrice,\n                    itemId: item.itemId,\n                    seller: item.seller,\n                    name: metadata.name,\n                    description: metadata.description,\n                    // image: metadata.image\n                    image: genre_image[metadata.genre]\n                })\n                console.log(\"items \", items)\n            }\n        }\n        setLoading(false)\n        setItems(items)\n    }\n\n    const buyMarketItem = async (item) => {\n        await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\n        loadMarketplaceItems()\n    }\n\n    useEffect(() => {\n        loadMarketplaceItems()\n    }, [])\n    if (loading) return (\n        <main style={{ padding: \"1rem 0\" }}>\n            <h2>Loading...</h2>\n        </main>\n    )\n    return (\n        <div className=\"flex justify-center\">\n            {items.length > 0 ?\n                <div className=\"px-5 container\">\n                    <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n                        {items.map((item, idx) => (\n                            <Col key={idx} className=\"overflow-hidden\">\n                                <Card>\n                                    <Card.Img variant=\"top\" src={item.image} />\n                                    <Card.Body color=\"secondary\">\n                                        <Card.Title>{item.name}</Card.Title>\n                                        <Card.Text>\n                                            {item.description}\n                                        </Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <div className='d-grid'>\n                                            <Button onClick={() => buyMarketItem(item)} variant=\"primary\" size=\"lg\">\n                                                Buy for {ethers.utils.formatEther(item.totalPrice)} ETH\n                      </Button>\n                                        </div>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                </div>\n                : (\n                    <main style={{ padding: \"1rem 0\" }}>\n                        <h2>No listed assets</h2>\n                    </main>\n                )}\n        </div>\n    );\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}