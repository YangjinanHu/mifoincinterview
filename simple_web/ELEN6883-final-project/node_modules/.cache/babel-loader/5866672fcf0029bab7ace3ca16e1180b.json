{"ast":null,"code":"'use strict';\n\nvar Suite = require('../suite');\n\nvar Test = require('../test');\n/**\n * Exports-style (as Node.js module) interface:\n *\n *     exports.Array = {\n *       '#indexOf()': {\n *         'should return -1 when the value is not present': function() {\n *\n *         },\n *\n *         'should return the correct index when the value is present': function() {\n *\n *         }\n *       }\n *     };\n *\n * @param {Suite} suite Root suite.\n */\n\n\nmodule.exports = function (suite) {\n  var suites = [suite];\n  suite.on(Suite.constants.EVENT_FILE_REQUIRE, visit);\n\n  function visit(obj, file) {\n    var suite;\n\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        var fn = obj[key];\n\n        switch (key) {\n          case 'before':\n            suites[0].beforeAll(fn);\n            break;\n\n          case 'after':\n            suites[0].afterAll(fn);\n            break;\n\n          case 'beforeEach':\n            suites[0].beforeEach(fn);\n            break;\n\n          case 'afterEach':\n            suites[0].afterEach(fn);\n            break;\n\n          default:\n            var test = new Test(key, fn);\n            test.file = file;\n            suites[0].addTest(test);\n        }\n      } else {\n        suite = Suite.create(suites[0], key);\n        suites.unshift(suite);\n        visit(obj[key], file);\n        suites.shift();\n      }\n    }\n  }\n};\n\nmodule.exports.description = 'Node.js module (\"exports\") style';","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/mocha/lib/interfaces/exports.js"],"names":["Suite","require","Test","module","exports","suite","suites","on","constants","EVENT_FILE_REQUIRE","visit","obj","file","key","fn","beforeAll","afterAll","beforeEach","afterEach","test","addTest","create","unshift","shift","description"],"mappings":"AAAA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,MAAIC,MAAM,GAAG,CAACD,KAAD,CAAb;AAEAA,EAAAA,KAAK,CAACE,EAAN,CAASP,KAAK,CAACQ,SAAN,CAAgBC,kBAAzB,EAA6CC,KAA7C;;AAEA,WAASA,KAAT,CAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxB,QAAIP,KAAJ;;AACA,SAAK,IAAIQ,GAAT,IAAgBF,GAAhB,EAAqB;AACnB,UAAI,OAAOA,GAAG,CAACE,GAAD,CAAV,KAAoB,UAAxB,EAAoC;AAClC,YAAIC,EAAE,GAAGH,GAAG,CAACE,GAAD,CAAZ;;AACA,gBAAQA,GAAR;AACE,eAAK,QAAL;AACEP,YAAAA,MAAM,CAAC,CAAD,CAAN,CAAUS,SAAV,CAAoBD,EAApB;AACA;;AACF,eAAK,OAAL;AACER,YAAAA,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmBF,EAAnB;AACA;;AACF,eAAK,YAAL;AACER,YAAAA,MAAM,CAAC,CAAD,CAAN,CAAUW,UAAV,CAAqBH,EAArB;AACA;;AACF,eAAK,WAAL;AACER,YAAAA,MAAM,CAAC,CAAD,CAAN,CAAUY,SAAV,CAAoBJ,EAApB;AACA;;AACF;AACE,gBAAIK,IAAI,GAAG,IAAIjB,IAAJ,CAASW,GAAT,EAAcC,EAAd,CAAX;AACAK,YAAAA,IAAI,CAACP,IAAL,GAAYA,IAAZ;AACAN,YAAAA,MAAM,CAAC,CAAD,CAAN,CAAUc,OAAV,CAAkBD,IAAlB;AAhBJ;AAkBD,OApBD,MAoBO;AACLd,QAAAA,KAAK,GAAGL,KAAK,CAACqB,MAAN,CAAaf,MAAM,CAAC,CAAD,CAAnB,EAAwBO,GAAxB,CAAR;AACAP,QAAAA,MAAM,CAACgB,OAAP,CAAejB,KAAf;AACAK,QAAAA,KAAK,CAACC,GAAG,CAACE,GAAD,CAAJ,EAAWD,IAAX,CAAL;AACAN,QAAAA,MAAM,CAACiB,KAAP;AACD;AACF;AACF;AACF,CApCD;;AAsCApB,MAAM,CAACC,OAAP,CAAeoB,WAAf,GAA6B,kCAA7B","sourcesContent":["'use strict';\nvar Suite = require('../suite');\nvar Test = require('../test');\n\n/**\n * Exports-style (as Node.js module) interface:\n *\n *     exports.Array = {\n *       '#indexOf()': {\n *         'should return -1 when the value is not present': function() {\n *\n *         },\n *\n *         'should return the correct index when the value is present': function() {\n *\n *         }\n *       }\n *     };\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function(suite) {\n  var suites = [suite];\n\n  suite.on(Suite.constants.EVENT_FILE_REQUIRE, visit);\n\n  function visit(obj, file) {\n    var suite;\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        var fn = obj[key];\n        switch (key) {\n          case 'before':\n            suites[0].beforeAll(fn);\n            break;\n          case 'after':\n            suites[0].afterAll(fn);\n            break;\n          case 'beforeEach':\n            suites[0].beforeEach(fn);\n            break;\n          case 'afterEach':\n            suites[0].afterEach(fn);\n            break;\n          default:\n            var test = new Test(key, fn);\n            test.file = file;\n            suites[0].addTest(test);\n        }\n      } else {\n        suite = Suite.create(suites[0], key);\n        suites.unshift(suite);\n        visit(obj[key], file);\n        suites.shift();\n      }\n    }\n  }\n};\n\nmodule.exports.description = 'Node.js module (\"exports\") style';\n"]},"metadata":{},"sourceType":"script"}