{"ast":null,"code":"var WritableStream = require('stream').Writable;\n\nvar inherits = require('util').inherits;\n\nmodule.exports = BrowserStdout;\ninherits(BrowserStdout, WritableStream);\n\nfunction BrowserStdout(opts) {\n  if (!(this instanceof BrowserStdout)) return new BrowserStdout(opts);\n  opts = opts || {};\n  WritableStream.call(this, opts);\n  this.label = opts.label !== undefined ? opts.label : 'stdout';\n}\n\nBrowserStdout.prototype._write = function (chunks, encoding, cb) {\n  var output = chunks.toString ? chunks.toString() : chunks;\n\n  if (this.label === false) {\n    console.log(output);\n  } else {\n    console.log(this.label + ':', output);\n  }\n\n  process.nextTick(cb);\n};","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/browser-stdout/index.js"],"names":["WritableStream","require","Writable","inherits","module","exports","BrowserStdout","opts","call","label","undefined","prototype","_write","chunks","encoding","cb","output","toString","console","log","process","nextTick"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,QAAvC;;AACA,IAAIC,QAAQ,GAAGF,OAAO,CAAC,MAAD,CAAP,CAAgBE,QAA/B;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAGAH,QAAQ,CAACG,aAAD,EAAgBN,cAAhB,CAAR;;AAEA,SAASM,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAI,EAAE,gBAAgBD,aAAlB,CAAJ,EAAsC,OAAO,IAAIA,aAAJ,CAAkBC,IAAlB,CAAP;AAEtCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAP,EAAAA,cAAc,CAACQ,IAAf,CAAoB,IAApB,EAA0BD,IAA1B;AACA,OAAKE,KAAL,GAAcF,IAAI,CAACE,KAAL,KAAeC,SAAhB,GAA6BH,IAAI,CAACE,KAAlC,GAA0C,QAAvD;AACD;;AAEDH,aAAa,CAACK,SAAd,CAAwBC,MAAxB,GAAiC,UAASC,MAAT,EAAiBC,QAAjB,EAA2BC,EAA3B,EAA+B;AAC9D,MAAIC,MAAM,GAAGH,MAAM,CAACI,QAAP,GAAkBJ,MAAM,CAACI,QAAP,EAAlB,GAAsCJ,MAAnD;;AACA,MAAI,KAAKJ,KAAL,KAAe,KAAnB,EAA0B;AACxBS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAFD,MAEO;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,GAAW,GAAvB,EAA4BO,MAA5B;AACD;;AACDI,EAAAA,OAAO,CAACC,QAAR,CAAiBN,EAAjB;AACD,CARD","sourcesContent":["var WritableStream = require('stream').Writable\nvar inherits = require('util').inherits\n\nmodule.exports = BrowserStdout\n\n\ninherits(BrowserStdout, WritableStream)\n\nfunction BrowserStdout(opts) {\n  if (!(this instanceof BrowserStdout)) return new BrowserStdout(opts)\n\n  opts = opts || {}\n  WritableStream.call(this, opts)\n  this.label = (opts.label !== undefined) ? opts.label : 'stdout'\n}\n\nBrowserStdout.prototype._write = function(chunks, encoding, cb) {\n  var output = chunks.toString ? chunks.toString() : chunks\n  if (this.label === false) {\n    console.log(output)\n  } else {\n    console.log(this.label+':', output)\n  }\n  process.nextTick(cb)\n}\n"]},"metadata":{},"sourceType":"script"}