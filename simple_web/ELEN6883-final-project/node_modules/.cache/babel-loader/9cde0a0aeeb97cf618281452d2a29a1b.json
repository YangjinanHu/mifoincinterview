{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHardhatVersion = exports.getPackageJson = exports.findClosestPackageJson = exports.getPackageRoot = exports.getPackageJsonPath = void 0;\n\nconst find_up_1 = __importDefault(require(\"find-up\"));\n\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nconst path_1 = __importDefault(require(\"path\"));\n\nfunction getPackageJsonPath() {\n  return findClosestPackageJson(__filename);\n}\n\nexports.getPackageJsonPath = getPackageJsonPath;\n\nfunction getPackageRoot() {\n  const packageJsonPath = getPackageJsonPath();\n  return path_1.default.dirname(packageJsonPath);\n}\n\nexports.getPackageRoot = getPackageRoot;\n\nfunction findClosestPackageJson(file) {\n  return find_up_1.default.sync(\"package.json\", {\n    cwd: path_1.default.dirname(file)\n  });\n}\n\nexports.findClosestPackageJson = findClosestPackageJson;\n\nasync function getPackageJson() {\n  const root = getPackageRoot();\n  return fs_extra_1.default.readJSON(path_1.default.join(root, \"package.json\"));\n}\n\nexports.getPackageJson = getPackageJson;\n\nfunction getHardhatVersion() {\n  const packageJsonPath = findClosestPackageJson(__filename);\n\n  if (packageJsonPath === null) {\n    return null;\n  }\n\n  try {\n    const packageJson = fs_extra_1.default.readJsonSync(packageJsonPath);\n    return packageJson.version;\n  } catch (_a) {\n    return null;\n  }\n}\n\nexports.getHardhatVersion = getHardhatVersion;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,SAAgBA,kBAAhB,GAAkC;AAChC,SAAOC,sBAAsB,CAACC,UAAD,CAA7B;AACD;;AAFDC;;AAIA,SAAgBC,cAAhB,GAA8B;AAC5B,QAAMC,eAAe,GAAGL,kBAAkB,EAA1C;AAEA,SAAOM,eAAKC,OAAL,CAAaF,eAAb,CAAP;AACD;;AAJDF;;AAcA,SAAgBF,sBAAhB,CAAuCO,IAAvC,EAAmD;AACjD,SAAOC,kBAAOC,IAAP,CAAY,cAAZ,EAA4B;AAAEC,OAAG,EAAEL,eAAKC,OAAL,CAAaC,IAAb;AAAP,GAA5B,CAAP;AACD;;AAFDL;;AAIO,eAAeS,cAAf,GAA6B;AAClC,QAAMC,IAAI,GAAGT,cAAc,EAA3B;AACA,SAAOU,mBAAQC,QAAR,CAAiBT,eAAKU,IAAL,CAAUH,IAAV,EAAgB,cAAhB,CAAjB,CAAP;AACD;;AAHDV;;AAKA,SAAgBc,iBAAhB,GAAiC;AAC/B,QAAMZ,eAAe,GAAGJ,sBAAsB,CAACC,UAAD,CAA9C;;AAEA,MAAIG,eAAe,KAAK,IAAxB,EAA8B;AAC5B,WAAO,IAAP;AACD;;AAED,MAAI;AACF,UAAMa,WAAW,GAAGJ,mBAAQK,YAAR,CAAqBd,eAArB,CAApB;AACA,WAAOa,WAAW,CAACE,OAAnB;AACD,GAHD,CAGE,WAAM;AACN,WAAO,IAAP;AACD;AACF;;AAbDjB","names":["getPackageJsonPath","findClosestPackageJson","__filename","exports","getPackageRoot","packageJsonPath","path_1","dirname","file","find_up_1","sync","cwd","getPackageJson","root","fs_extra_1","readJSON","join","getHardhatVersion","packageJson","readJsonSync","version"],"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/hardhat/src/internal/util/packageInfo.ts"],"sourcesContent":["import findup from \"find-up\";\nimport fsExtra from \"fs-extra\";\nimport path from \"path\";\n\nexport function getPackageJsonPath(): string {\n  return findClosestPackageJson(__filename)!;\n}\n\nexport function getPackageRoot(): string {\n  const packageJsonPath = getPackageJsonPath();\n\n  return path.dirname(packageJsonPath);\n}\n\nexport interface PackageJson {\n  name: string;\n  version: string;\n  engines: {\n    node: string;\n  };\n}\n\nexport function findClosestPackageJson(file: string): string | null {\n  return findup.sync(\"package.json\", { cwd: path.dirname(file) });\n}\n\nexport async function getPackageJson(): Promise<PackageJson> {\n  const root = getPackageRoot();\n  return fsExtra.readJSON(path.join(root, \"package.json\"));\n}\n\nexport function getHardhatVersion(): string | null {\n  const packageJsonPath = findClosestPackageJson(__filename);\n\n  if (packageJsonPath === null) {\n    return null;\n  }\n\n  try {\n    const packageJson = fsExtra.readJsonSync(packageJsonPath);\n    return packageJson.version;\n  } catch {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}