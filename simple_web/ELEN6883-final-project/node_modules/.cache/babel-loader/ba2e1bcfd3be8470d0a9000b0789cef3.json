{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Pending = require('./pending');\n\nvar debug = require('debug')('mocha:runnable');\n\nvar milliseconds = require('ms');\n\nvar utils = require('./utils');\n\nvar errors = require('./errors');\n\nvar createInvalidExceptionError = errors.createInvalidExceptionError;\nvar createMultipleDoneError = errors.createMultipleDoneError;\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\nvar toString = Object.prototype.toString;\nmodule.exports = Runnable;\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @class\n * @extends external:EventEmitter\n * @public\n * @param {String} title\n * @param {Function} fn\n */\n\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this._retries = -1;\n  this.reset();\n}\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\n\nutils.inherits(Runnable, EventEmitter);\n/**\n * Resets the state initially or for a next run.\n */\n\nRunnable.prototype.reset = function () {\n  this.timedOut = false;\n  this._currentRetry = 0;\n  this.pending = false;\n  delete this.state;\n  delete this.err;\n};\n/**\n * Get current timeout value in msecs.\n *\n * @private\n * @returns {number} current timeout threshold value\n */\n\n/**\n * @summary\n * Set timeout threshold value (msecs).\n *\n * @description\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n * If clamped value matches either range endpoint, timeouts will be disabled.\n *\n * @private\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n * @param {number|string} ms - Timeout threshold value.\n * @returns {Runnable} this\n * @chainable\n */\n\n\nRunnable.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  } // Clamp to range\n\n\n  var INT_MAX = Math.pow(2, 31) - 1;\n  var range = [0, INT_MAX];\n  ms = utils.clamp(ms, range); // see #1652 for reasoning\n\n  if (ms === range[0] || ms === range[1]) {\n    this._enableTimeouts = false;\n  }\n\n  debug('timeout %d', ms);\n  this._timeout = ms;\n\n  if (this.timer) {\n    this.resetTimeout();\n  }\n\n  return this;\n};\n/**\n * Set or get slow `ms`.\n *\n * @private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\n\n\nRunnable.prototype.slow = function (ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n/**\n * Set and get whether timeout is `enabled`.\n *\n * @private\n * @param {boolean} enabled\n * @return {Runnable|boolean} enabled or Runnable instance.\n */\n\n\nRunnable.prototype.enableTimeouts = function (enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n/**\n * Halt and mark as pending.\n *\n * @memberof Mocha.Runnable\n * @public\n */\n\n\nRunnable.prototype.skip = function () {\n  this.pending = true;\n  throw new Pending('sync skip; aborting execution');\n};\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @private\n */\n\n\nRunnable.prototype.isPending = function () {\n  return this.pending || this.parent && this.parent.isPending();\n};\n/**\n * Return `true` if this Runnable has failed.\n * @return {boolean}\n * @private\n */\n\n\nRunnable.prototype.isFailed = function () {\n  return !this.isPending() && this.state === constants.STATE_FAILED;\n};\n/**\n * Return `true` if this Runnable has passed.\n * @return {boolean}\n * @private\n */\n\n\nRunnable.prototype.isPassed = function () {\n  return !this.isPending() && this.state === constants.STATE_PASSED;\n};\n/**\n * Set or get number of retries.\n *\n * @private\n */\n\n\nRunnable.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n\n  this._retries = n;\n};\n/**\n * Set or get current retry\n *\n * @private\n */\n\n\nRunnable.prototype.currentRetry = function (n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n\n  this._currentRetry = n;\n};\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\n\n\nRunnable.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\n\n\nRunnable.prototype.titlePath = function () {\n  return this.parent.titlePath().concat([this.title]);\n};\n/**\n * Clear the timeout.\n *\n * @private\n */\n\n\nRunnable.prototype.clearTimeout = function () {\n  clearTimeout(this.timer);\n};\n/**\n * Reset the timeout.\n *\n * @private\n */\n\n\nRunnable.prototype.resetTimeout = function () {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n\n  this.clearTimeout();\n  this.timer = setTimeout(function () {\n    if (!self._enableTimeouts) {\n      return;\n    }\n\n    self.callback(self._timeoutError(ms));\n    self.timedOut = true;\n  }, ms);\n};\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @private\n * @param {string[]} globals\n */\n\n\nRunnable.prototype.globals = function (globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n\n  this._allowedGlobals = globals;\n};\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @private\n */\n\n\nRunnable.prototype.run = function (fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var errorWasHandled = false; // Sometimes the ctx exists, but it is not runnable\n\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  } // called multiple times\n\n\n  function multiple(err) {\n    if (errorWasHandled) {\n      return;\n    }\n\n    errorWasHandled = true;\n    self.emit('error', createMultipleDoneError(self, err));\n  } // finished\n\n\n  function done(err) {\n    var ms = self.timeout();\n\n    if (self.timedOut) {\n      return;\n    }\n\n    if (finished) {\n      return multiple(err);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = self._timeoutError(ms);\n    }\n\n    fn(err);\n  } // for .resetTimeout() and Runner#uncaught()\n\n\n  this.callback = done;\n\n  if (this.fn && typeof this.fn.call !== 'function') {\n    done(new TypeError('A runnable must be passed a function as its second argument.'));\n    return;\n  } // explicit async with `done` argument\n\n\n  if (this.async) {\n    this.resetTimeout(); // allows skip() to be used in an explicit async context\n\n    this.skip = function asyncSkip() {\n      this.pending = true;\n      done(); // halt execution, the uncaught handler will ignore the failure.\n\n      throw new Pending('async skip; aborting execution');\n    };\n\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      // handles async runnables which actually run synchronously\n      errorWasHandled = true;\n\n      if (err instanceof Pending) {\n        return; // done() is already called in this.skip()\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n\n      done(Runnable.toValueOrError(err));\n    }\n\n    return;\n  } // sync or promise-returning\n\n\n  try {\n    if (this.isPending()) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    errorWasHandled = true;\n\n    if (err instanceof Pending) {\n      return done();\n    } else if (this.allowUncaught) {\n      throw err;\n    }\n\n    done(Runnable.toValueOrError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(function () {\n        done(); // Return null so libraries like bluebird do not warn about\n        // subsequently constructed Promises.\n\n        return null;\n      }, function (reason) {\n        done(reason || new Error('Promise rejected with no or falsy reason'));\n      });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    var result = fn.call(ctx, function (err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: ' + JSON.stringify(err)));\n        }\n\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n\n      if (result && utils.isPromise(result)) {\n        return done(new Error('Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'));\n      }\n\n      done();\n    });\n  }\n};\n/**\n * Instantiates a \"timeout\" error\n *\n * @param {number} ms - Timeout (in milliseconds)\n * @returns {Error} a \"timeout\" error\n * @private\n */\n\n\nRunnable.prototype._timeoutError = function (ms) {\n  var msg = 'Timeout of ' + ms + 'ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.';\n\n  if (this.file) {\n    msg += ' (' + this.file + ')';\n  }\n\n  return new Error(msg);\n};\n\nvar constants = utils.defineConstants(\n/**\n * {@link Runnable}-related constants.\n * @public\n * @memberof Runnable\n * @readonly\n * @static\n * @alias constants\n * @enum {string}\n */\n{\n  /**\n   * Value of `state` prop when a `Runnable` has failed\n   */\n  STATE_FAILED: 'failed',\n\n  /**\n   * Value of `state` prop when a `Runnable` has passed\n   */\n  STATE_PASSED: 'passed'\n});\n/**\n * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n * @param {*} [value] - Value to return, if present\n * @returns {*|Error} `value`, otherwise an `Error`\n * @private\n */\n\nRunnable.toValueOrError = function (value) {\n  return value || createInvalidExceptionError('Runnable failed with falsy or undefined exception. Please throw an Error instead.', value);\n};\n\nRunnable.constants = constants;","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/mocha/lib/runnable.js"],"names":["EventEmitter","require","Pending","debug","milliseconds","utils","errors","createInvalidExceptionError","createMultipleDoneError","Date","global","setTimeout","clearTimeout","toString","Object","prototype","module","exports","Runnable","title","fn","body","async","length","sync","_timeout","_slow","_enableTimeouts","_retries","reset","inherits","timedOut","_currentRetry","pending","state","err","timeout","ms","arguments","INT_MAX","Math","pow","range","clamp","timer","resetTimeout","slow","enableTimeouts","enabled","skip","isPending","parent","isFailed","constants","STATE_FAILED","isPassed","STATE_PASSED","retries","n","currentRetry","fullTitle","titlePath","join","concat","self","callback","_timeoutError","globals","_allowedGlobals","run","start","ctx","finished","errorWasHandled","runnable","multiple","emit","done","duration","call","TypeError","asyncSkip","callFnAsync","allowUncaught","toValueOrError","callFn","result","then","reason","Error","asyncOnly","JSON","stringify","isPromise","msg","file","defineConstants","value"],"mappings":"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","sourcesContent":["'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('ms');\nvar utils = require('./utils');\nvar errors = require('./errors');\nvar createInvalidExceptionError = errors.createInvalidExceptionError;\nvar createMultipleDoneError = errors.createMultipleDoneError;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\nvar toString = Object.prototype.toString;\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @class\n * @extends external:EventEmitter\n * @public\n * @param {String} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this._retries = -1;\n  this.reset();\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\nutils.inherits(Runnable, EventEmitter);\n\n/**\n * Resets the state initially or for a next run.\n */\nRunnable.prototype.reset = function() {\n  this.timedOut = false;\n  this._currentRetry = 0;\n  this.pending = false;\n  delete this.state;\n  delete this.err;\n};\n\n/**\n * Get current timeout value in msecs.\n *\n * @private\n * @returns {number} current timeout threshold value\n */\n/**\n * @summary\n * Set timeout threshold value (msecs).\n *\n * @description\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n * If clamped value matches either range endpoint, timeouts will be disabled.\n *\n * @private\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n * @param {number|string} ms - Timeout threshold value.\n * @returns {Runnable} this\n * @chainable\n */\nRunnable.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  // Clamp to range\n  var INT_MAX = Math.pow(2, 31) - 1;\n  var range = [0, INT_MAX];\n  ms = utils.clamp(ms, range);\n\n  // see #1652 for reasoning\n  if (ms === range[0] || ms === range[1]) {\n    this._enableTimeouts = false;\n  }\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set or get slow `ms`.\n *\n * @private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function(ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set and get whether timeout is `enabled`.\n *\n * @private\n * @param {boolean} enabled\n * @return {Runnable|boolean} enabled or Runnable instance.\n */\nRunnable.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @memberof Mocha.Runnable\n * @public\n */\nRunnable.prototype.skip = function() {\n  this.pending = true;\n  throw new Pending('sync skip; aborting execution');\n};\n\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @private\n */\nRunnable.prototype.isPending = function() {\n  return this.pending || (this.parent && this.parent.isPending());\n};\n\n/**\n * Return `true` if this Runnable has failed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isFailed = function() {\n  return !this.isPending() && this.state === constants.STATE_FAILED;\n};\n\n/**\n * Return `true` if this Runnable has passed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isPassed = function() {\n  return !this.isPending() && this.state === constants.STATE_PASSED;\n};\n\n/**\n * Set or get number of retries.\n *\n * @private\n */\nRunnable.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Set or get current retry\n *\n * @private\n */\nRunnable.prototype.currentRetry = function(n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function() {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.titlePath = function() {\n  return this.parent.titlePath().concat([this.title]);\n};\n\n/**\n * Clear the timeout.\n *\n * @private\n */\nRunnable.prototype.clearTimeout = function() {\n  clearTimeout(this.timer);\n};\n\n/**\n * Reset the timeout.\n *\n * @private\n */\nRunnable.prototype.resetTimeout = function() {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function() {\n    if (!self._enableTimeouts) {\n      return;\n    }\n    self.callback(self._timeoutError(ms));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function(globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @private\n */\nRunnable.prototype.run = function(fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var errorWasHandled = false;\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (errorWasHandled) {\n      return;\n    }\n    errorWasHandled = true;\n    self.emit('error', createMultipleDoneError(self, err));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n\n    if (finished) {\n      return multiple(err);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = self._timeoutError(ms);\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout() and Runner#uncaught()\n  this.callback = done;\n\n  if (this.fn && typeof this.fn.call !== 'function') {\n    done(\n      new TypeError(\n        'A runnable must be passed a function as its second argument.'\n      )\n    );\n    return;\n  }\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    // allows skip() to be used in an explicit async context\n    this.skip = function asyncSkip() {\n      this.pending = true;\n      done();\n      // halt execution, the uncaught handler will ignore the failure.\n      throw new Pending('async skip; aborting execution');\n    };\n\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      // handles async runnables which actually run synchronously\n      errorWasHandled = true;\n      if (err instanceof Pending) {\n        return; // done() is already called in this.skip()\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n      done(Runnable.toValueOrError(err));\n    }\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    if (this.isPending()) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    errorWasHandled = true;\n    if (err instanceof Pending) {\n      return done();\n    } else if (this.allowUncaught) {\n      throw err;\n    }\n    done(Runnable.toValueOrError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function(reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        }\n      );\n    } else {\n      if (self.asyncOnly) {\n        return done(\n          new Error(\n            '--async-only option in use without declaring `done()` or returning a promise'\n          )\n        );\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    var result = fn.call(ctx, function(err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(\n            new Error('done() invoked with non-Error: ' + JSON.stringify(err))\n          );\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      if (result && utils.isPromise(result)) {\n        return done(\n          new Error(\n            'Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'\n          )\n        );\n      }\n\n      done();\n    });\n  }\n};\n\n/**\n * Instantiates a \"timeout\" error\n *\n * @param {number} ms - Timeout (in milliseconds)\n * @returns {Error} a \"timeout\" error\n * @private\n */\nRunnable.prototype._timeoutError = function(ms) {\n  var msg =\n    'Timeout of ' +\n    ms +\n    'ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.';\n  if (this.file) {\n    msg += ' (' + this.file + ')';\n  }\n  return new Error(msg);\n};\n\nvar constants = utils.defineConstants(\n  /**\n   * {@link Runnable}-related constants.\n   * @public\n   * @memberof Runnable\n   * @readonly\n   * @static\n   * @alias constants\n   * @enum {string}\n   */\n  {\n    /**\n     * Value of `state` prop when a `Runnable` has failed\n     */\n    STATE_FAILED: 'failed',\n    /**\n     * Value of `state` prop when a `Runnable` has passed\n     */\n    STATE_PASSED: 'passed'\n  }\n);\n\n/**\n * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n * @param {*} [value] - Value to return, if present\n * @returns {*|Error} `value`, otherwise an `Error`\n * @private\n */\nRunnable.toValueOrError = function(value) {\n  return (\n    value ||\n    createInvalidExceptionError(\n      'Runnable failed with falsy or undefined exception. Please throw an Error instead.',\n      value\n    )\n  );\n};\n\nRunnable.constants = constants;\n"]},"metadata":{},"sourceType":"script"}