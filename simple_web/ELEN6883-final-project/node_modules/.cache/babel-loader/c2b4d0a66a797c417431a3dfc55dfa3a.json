{"ast":null,"code":"var _jsxFileName = \"/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/src/frontend/components/MyPurchases.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport poetry from './genres_images/poetry.png';\nimport humor from './genres_images/humor.png';\nimport drama from './genres_images/drama.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genre_image = {\n  \"Drama\": drama,\n  \"Humor\": humor,\n  \"Poetry\": poetry\n};\nexport default function MyPurchases(_ref) {\n  _s();\n\n  let {\n    marketplace,\n    nft,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [purchases, setPurchases] = useState([]);\n\n  const loadPurchasedItems = async () => {\n    // Fetch purchased items from marketplace by quering Offered events with the buyer set as the user\n    const filter = marketplace.filters.Bought(null, null, null, null, null, account);\n    const results = await marketplace.queryFilter(filter); //Fetch metadata of each nft and add that to listedItem object.\n\n    const purchases = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args; // get uri url from nft contract\n\n      const uri = await nft.tokenURI(i.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n      const response = await fetch(uri);\n      const metadata = await response.json(); // get total price of item (item price + fee)\n\n      const totalPrice = await marketplace.getTotalPrice(i.itemId); // define listed item object\n\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: genre_image[metadata.genre],\n        data_link: metadata.image\n      };\n      return purchasedItem;\n    }));\n    setLoading(false);\n    setPurchases(purchases);\n  };\n\n  useEffect(() => {\n    loadPurchasedItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: purchases.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-5\",\n        children: purchases.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              color: \"secondary\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => {\n                e.preventDefault();\n                window.open(item.data_link, \"_blank\");\n              },\n              children: \" View Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No purchases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPurchases, \"+bT9nvXJXwVwMkewhHc+Eyc0m60=\");\n\n_c = MyPurchases;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPurchases\");","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/src/frontend/components/MyPurchases.js"],"names":["useState","useEffect","ethers","Row","Col","Card","poetry","humor","drama","genre_image","MyPurchases","marketplace","nft","account","loading","setLoading","purchases","setPurchases","loadPurchasedItems","filter","filters","Bought","results","queryFilter","Promise","all","map","i","args","uri","tokenURI","tokenId","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","purchasedItem","price","name","description","image","genre","data_link","padding","length","item","idx","e","preventDefault","window","open","utils","formatEther"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card } from 'react-bootstrap'\nimport poetry from './genres_images/poetry.png'\nimport humor from './genres_images/humor.png'\nimport drama from './genres_images/drama.png'\n\nconst genre_image = {\n    \"Drama\": drama,\n    \"Humor\": humor,\n    \"Poetry\": poetry\n}\n\nexport default function MyPurchases({ marketplace, nft, account }) {\n    const [loading, setLoading] = useState(true)\n    const [purchases, setPurchases] = useState([])\n    const loadPurchasedItems = async () => {\n        // Fetch purchased items from marketplace by quering Offered events with the buyer set as the user\n        const filter = marketplace.filters.Bought(null, null, null, null, null, account)\n        const results = await marketplace.queryFilter(filter)\n        //Fetch metadata of each nft and add that to listedItem object.\n        const purchases = await Promise.all(results.map(async i => {\n            // fetch arguments from each result\n            i = i.args\n            // get uri url from nft contract\n            const uri = await nft.tokenURI(i.tokenId)\n            // use uri to fetch the nft metadata stored on ipfs \n            const response = await fetch(uri)\n            const metadata = await response.json()\n            // get total price of item (item price + fee)\n            const totalPrice = await marketplace.getTotalPrice(i.itemId)\n            // define listed item object\n            let purchasedItem = {\n                totalPrice,\n                price: i.price,\n                itemId: i.itemId,\n                name: metadata.name,\n                description: metadata.description,\n                image: genre_image[metadata.genre],\n                data_link: metadata.image\n            }\n            return purchasedItem\n        }))\n        setLoading(false)\n        setPurchases(purchases)\n    }\n    useEffect(() => {\n        loadPurchasedItems()\n    }, [])\n    if (loading) return (\n        <main style={{ padding: \"1rem 0\" }}>\n            <h2>Loading...</h2>\n        </main>\n    )\n    return (\n        <div className=\"flex justify-center\">\n            {purchases.length > 0 ?\n                <div className=\"px-5 container\">\n                    <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n                        {purchases.map((item, idx) => (\n                            <Col key={idx} className=\"overflow-hidden\">\n                                <Card>\n                                    <Card.Img variant=\"top\" src={item.image} />\n                                    <Card.Body color=\"secondary\">\n                                        <Card.Title>{item.name}</Card.Title>\n                                        <Card.Text>\n                                            {item.description}\n                                        </Card.Text>\n                                    </Card.Body>\n                                    <button\n                                        type=\"button\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            window.open(item.data_link, \"_blank\");\n                                        }}\n                                    > View Content</button>\n                                    <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                </div>\n                : (\n                    <main style={{ padding: \"1rem 0\" }}>\n                        <h2>No purchases</h2>\n                    </main>\n                )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}