{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HARDHAT_PARAM_DEFINITIONS = void 0;\n\nconst types = __importStar(require(\"./argumentTypes\"));\n\nexports.HARDHAT_PARAM_DEFINITIONS = {\n  network: {\n    name: \"network\",\n    defaultValue: undefined,\n    description: \"The network to connect to.\",\n    type: types.string,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  showStackTraces: {\n    name: \"showStackTraces\",\n    defaultValue: false,\n    description: \"Show stack traces.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  version: {\n    name: \"version\",\n    defaultValue: false,\n    description: \"Shows hardhat's version.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  help: {\n    name: \"help\",\n    defaultValue: false,\n    description: \"Shows this message, or a task's help if its name is provided\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  emoji: {\n    name: \"emoji\",\n    defaultValue: process.platform === \"darwin\",\n    description: \"Use emoji in messages.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  config: {\n    name: \"config\",\n    defaultValue: undefined,\n    description: \"A Hardhat config file.\",\n    type: types.inputFile,\n    isFlag: false,\n    isOptional: true,\n    isVariadic: false\n  },\n  verbose: {\n    name: \"verbose\",\n    defaultValue: false,\n    description: \"Enables Hardhat verbose logging\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  maxMemory: {\n    name: \"maxMemory\",\n    defaultValue: undefined,\n    description: \"The maximum amount of memory that Hardhat can use.\",\n    type: types.int,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  tsconfig: {\n    name: \"tsconfig\",\n    defaultValue: undefined,\n    description: \"A TypeScript config file.\",\n    type: types.inputFile,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAEaA,oCAAqD;AAChEC,SAAO,EAAE;AACPC,QAAI,EAAE,SADC;AAEPC,gBAAY,EAAEC,SAFP;AAGPC,eAAW,EAAE,4BAHN;AAIPC,QAAI,EAAEC,KAAK,CAACC,MAJL;AAKPC,cAAU,EAAE,IALL;AAMPC,UAAM,EAAE,KAND;AAOPC,cAAU,EAAE;AAPL,GADuD;AAUhEC,iBAAe,EAAE;AACfV,QAAI,EAAE,iBADS;AAEfC,gBAAY,EAAE,KAFC;AAGfE,eAAW,EAAE,oBAHE;AAIfC,QAAI,EAAEC,KAAK,CAACM,OAJG;AAKfH,UAAM,EAAE,IALO;AAMfD,cAAU,EAAE,IANG;AAOfE,cAAU,EAAE;AAPG,GAV+C;AAmBhEG,SAAO,EAAE;AACPZ,QAAI,EAAE,SADC;AAEPC,gBAAY,EAAE,KAFP;AAGPE,eAAW,EAAE,0BAHN;AAIPC,QAAI,EAAEC,KAAK,CAACM,OAJL;AAKPH,UAAM,EAAE,IALD;AAMPD,cAAU,EAAE,IANL;AAOPE,cAAU,EAAE;AAPL,GAnBuD;AA4BhEI,MAAI,EAAE;AACJb,QAAI,EAAE,MADF;AAEJC,gBAAY,EAAE,KAFV;AAGJE,eAAW,EAAE,8DAHT;AAIJC,QAAI,EAAEC,KAAK,CAACM,OAJR;AAKJH,UAAM,EAAE,IALJ;AAMJD,cAAU,EAAE,IANR;AAOJE,cAAU,EAAE;AAPR,GA5B0D;AAqChEK,OAAK,EAAE;AACLd,QAAI,EAAE,OADD;AAELC,gBAAY,EAAEc,OAAO,CAACC,QAAR,KAAqB,QAF9B;AAGLb,eAAW,EAAE,wBAHR;AAILC,QAAI,EAAEC,KAAK,CAACM,OAJP;AAKLH,UAAM,EAAE,IALH;AAMLD,cAAU,EAAE,IANP;AAOLE,cAAU,EAAE;AAPP,GArCyD;AA8ChEQ,QAAM,EAAE;AACNjB,QAAI,EAAE,QADA;AAENC,gBAAY,EAAEC,SAFR;AAGNC,eAAW,EAAE,wBAHP;AAINC,QAAI,EAAEC,KAAK,CAACa,SAJN;AAKNV,UAAM,EAAE,KALF;AAMND,cAAU,EAAE,IANN;AAONE,cAAU,EAAE;AAPN,GA9CwD;AAuDhEU,SAAO,EAAE;AACPnB,QAAI,EAAE,SADC;AAEPC,gBAAY,EAAE,KAFP;AAGPE,eAAW,EAAE,iCAHN;AAIPC,QAAI,EAAEC,KAAK,CAACM,OAJL;AAKPH,UAAM,EAAE,IALD;AAMPD,cAAU,EAAE,IANL;AAOPE,cAAU,EAAE;AAPL,GAvDuD;AAgEhEW,WAAS,EAAE;AACTpB,QAAI,EAAE,WADG;AAETC,gBAAY,EAAEC,SAFL;AAGTC,eAAW,EAAE,oDAHJ;AAITC,QAAI,EAAEC,KAAK,CAACgB,GAJH;AAKTd,cAAU,EAAE,IALH;AAMTC,UAAM,EAAE,KANC;AAOTC,cAAU,EAAE;AAPH,GAhEqD;AAyEhEa,UAAQ,EAAE;AACRtB,QAAI,EAAE,UADE;AAERC,gBAAY,EAAEC,SAFN;AAGRC,eAAW,EAAE,2BAHL;AAIRC,QAAI,EAAEC,KAAK,CAACa,SAJJ;AAKRX,cAAU,EAAE,IALJ;AAMRC,UAAM,EAAE,KANA;AAORC,cAAU,EAAE;AAPJ;AAzEsD,CAArD","names":["exports","network","name","defaultValue","undefined","description","type","types","string","isOptional","isFlag","isVariadic","showStackTraces","boolean","version","help","emoji","process","platform","config","inputFile","verbose","maxMemory","int","tsconfig"],"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/hardhat/src/internal/core/params/hardhat-params.ts"],"sourcesContent":["import { HardhatParamDefinitions } from \"../../../types\";\n\nimport * as types from \"./argumentTypes\";\n\nexport const HARDHAT_PARAM_DEFINITIONS: HardhatParamDefinitions = {\n  network: {\n    name: \"network\",\n    defaultValue: undefined,\n    description: \"The network to connect to.\",\n    type: types.string,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false,\n  },\n  showStackTraces: {\n    name: \"showStackTraces\",\n    defaultValue: false,\n    description: \"Show stack traces.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  version: {\n    name: \"version\",\n    defaultValue: false,\n    description: \"Shows hardhat's version.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  help: {\n    name: \"help\",\n    defaultValue: false,\n    description: \"Shows this message, or a task's help if its name is provided\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  emoji: {\n    name: \"emoji\",\n    defaultValue: process.platform === \"darwin\",\n    description: \"Use emoji in messages.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  config: {\n    name: \"config\",\n    defaultValue: undefined,\n    description: \"A Hardhat config file.\",\n    type: types.inputFile,\n    isFlag: false,\n    isOptional: true,\n    isVariadic: false,\n  },\n  verbose: {\n    name: \"verbose\",\n    defaultValue: false,\n    description: \"Enables Hardhat verbose logging\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  maxMemory: {\n    name: \"maxMemory\",\n    defaultValue: undefined,\n    description: \"The maximum amount of memory that Hardhat can use.\",\n    type: types.int,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false,\n  },\n  tsconfig: {\n    name: \"tsconfig\",\n    defaultValue: undefined,\n    description: \"A TypeScript config file.\",\n    type: types.inputFile,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false,\n  },\n};\n"]},"metadata":{},"sourceType":"script"}