{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Hook = require('./hook');\n\nvar utils = require('./utils');\n\nvar inherits = utils.inherits;\n\nvar debug = require('debug')('mocha:suite');\n\nvar milliseconds = require('ms');\n\nvar errors = require('./errors');\n\nvar createInvalidArgumentTypeError = errors.createInvalidArgumentTypeError;\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n/**\n * Create a new `Suite` with the given `title` and parent `Suite`.\n *\n * @public\n * @param {Suite} parent - Parent suite (required!)\n * @param {string} title - Title\n * @return {Suite}\n */\n\nSuite.create = function (parent, title) {\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n/**\n * Constructs a new `Suite` instance with the given `title`, `ctx`, and `isRoot`.\n *\n * @public\n * @class\n * @extends EventEmitter\n * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}\n * @param {string} title - Suite title.\n * @param {Context} parentContext - Parent context instance.\n * @param {boolean} [isRoot=false] - Whether this is the root suite.\n */\n\n\nfunction Suite(title, parentContext, isRoot) {\n  if (!utils.isString(title)) {\n    throw createInvalidArgumentTypeError('Suite argument \"title\" must be a string. Received type \"' + typeof title + '\"', 'title', 'string');\n  }\n\n  this.title = title;\n\n  function Context() {}\n\n  Context.prototype = parentContext;\n  this.ctx = new Context();\n  this.suites = [];\n  this.tests = [];\n  this.root = isRoot === true;\n  this.pending = false;\n  this._retries = -1;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this._onlyTests = [];\n  this._onlySuites = [];\n  this.reset();\n  this.on('newListener', function (event) {\n    if (deprecatedEvents[event]) {\n      utils.deprecate('Event \"' + event + '\" is deprecated.  Please let the Mocha team know about your use case: https://git.io/v6Lwm');\n    }\n  });\n}\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\n\ninherits(Suite, EventEmitter);\n/**\n * Resets the state initially or for a next run.\n */\n\nSuite.prototype.reset = function () {\n  this.delayed = false;\n\n  function doReset(thingToReset) {\n    thingToReset.reset();\n  }\n\n  this.suites.forEach(doReset);\n  this.tests.forEach(doReset);\n\n  this._beforeEach.forEach(doReset);\n\n  this._afterEach.forEach(doReset);\n\n  this._beforeAll.forEach(doReset);\n\n  this._afterAll.forEach(doReset);\n};\n/**\n * Return a clone of this `Suite`.\n *\n * @private\n * @return {Suite}\n */\n\n\nSuite.prototype.clone = function () {\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.root = this.root;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n/**\n * Set or get timeout `ms` or short-hand such as \"2s\".\n *\n * @private\n * @todo Do not attempt to set value if `ms` is undefined\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\n\n\nSuite.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n\n  if (ms.toString() === '0') {\n    this._enableTimeouts = false;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n/**\n * Set or get number of times to retry a failed test.\n *\n * @private\n * @param {number|string} n\n * @return {Suite|number} for chaining\n */\n\n\nSuite.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n\n  debug('retries %d', n);\n  this._retries = parseInt(n, 10) || 0;\n  return this;\n};\n/**\n * Set or get timeout to `enabled`.\n *\n * @private\n * @param {boolean} enabled\n * @return {Suite|boolean} self or enabled\n */\n\n\nSuite.prototype.enableTimeouts = function (enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n/**\n * Set or get slow `ms` or short-hand such as \"2s\".\n *\n * @private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\n\n\nSuite.prototype.slow = function (ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n/**\n * Set or get whether to bail after first error.\n *\n * @private\n * @param {boolean} bail\n * @return {Suite|number} for chaining\n */\n\n\nSuite.prototype.bail = function (bail) {\n  if (!arguments.length) {\n    return this._bail;\n  }\n\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n/**\n * Check if this suite or its parent suite is marked as pending.\n *\n * @private\n */\n\n\nSuite.prototype.isPending = function () {\n  return this.pending || this.parent && this.parent.isPending();\n};\n/**\n * Generic hook-creator.\n * @private\n * @param {string} title - Title of hook\n * @param {Function} fn - Hook callback\n * @returns {Hook} A new hook\n */\n\n\nSuite.prototype._createHook = function (title, fn) {\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  hook.file = this.file;\n  return hook;\n};\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\n\n\nSuite.prototype.beforeAll = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n\n  this._beforeAll.push(hook);\n\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_ALL, hook);\n  return this;\n};\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\n\n\nSuite.prototype.afterAll = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n\n  this._afterAll.push(hook);\n\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_ALL, hook);\n  return this;\n};\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\n\n\nSuite.prototype.beforeEach = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n\n  this._beforeEach.push(hook);\n\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_EACH, hook);\n  return this;\n};\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\n\n\nSuite.prototype.afterEach = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n\n  this._afterEach.push(hook);\n\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_EACH, hook);\n  return this;\n};\n/**\n * Add a test `suite`.\n *\n * @private\n * @param {Suite} suite\n * @return {Suite} for chaining\n */\n\n\nSuite.prototype.addSuite = function (suite) {\n  suite.parent = this;\n  suite.root = false;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit(constants.EVENT_SUITE_ADD_SUITE, suite);\n  return this;\n};\n/**\n * Add a `test` to this suite.\n *\n * @private\n * @param {Test} test\n * @return {Suite} for chaining\n */\n\n\nSuite.prototype.addTest = function (test) {\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.retries(this.retries());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit(constants.EVENT_SUITE_ADD_TEST, test);\n  return this;\n};\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Suite\n * @public\n * @return {string}\n */\n\n\nSuite.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n/**\n * Return the title path generated by recursively concatenating the parent's\n * title path.\n *\n * @memberof Suite\n * @public\n * @return {string}\n */\n\n\nSuite.prototype.titlePath = function () {\n  var result = [];\n\n  if (this.parent) {\n    result = result.concat(this.parent.titlePath());\n  }\n\n  if (!this.root) {\n    result.push(this.title);\n  }\n\n  return result;\n};\n/**\n * Return the total number of tests.\n *\n * @memberof Suite\n * @public\n * @return {number}\n */\n\n\nSuite.prototype.total = function () {\n  return this.suites.reduce(function (sum, suite) {\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n};\n/**\n * Iterates through each suite recursively to find all tests. Applies a\n * function in the format `fn(test)`.\n *\n * @private\n * @param {Function} fn\n * @return {Suite}\n */\n\n\nSuite.prototype.eachTest = function (fn) {\n  this.tests.forEach(fn);\n  this.suites.forEach(function (suite) {\n    suite.eachTest(fn);\n  });\n  return this;\n};\n/**\n * This will run the root suite if we happen to be running in delayed mode.\n * @private\n */\n\n\nSuite.prototype.run = function run() {\n  if (this.root) {\n    this.emit(constants.EVENT_ROOT_SUITE_RUN);\n  }\n};\n/**\n * Determines whether a suite has an `only` test or suite as a descendant.\n *\n * @private\n * @returns {Boolean}\n */\n\n\nSuite.prototype.hasOnly = function hasOnly() {\n  return this._onlyTests.length > 0 || this._onlySuites.length > 0 || this.suites.some(function (suite) {\n    return suite.hasOnly();\n  });\n};\n/**\n * Filter suites based on `isOnly` logic.\n *\n * @private\n * @returns {Boolean}\n */\n\n\nSuite.prototype.filterOnly = function filterOnly() {\n  if (this._onlyTests.length) {\n    // If the suite contains `only` tests, run those and ignore any nested suites.\n    this.tests = this._onlyTests;\n    this.suites = [];\n  } else {\n    // Otherwise, do not run any of the tests in this suite.\n    this.tests = [];\n\n    this._onlySuites.forEach(function (onlySuite) {\n      // If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.\n      // Otherwise, all of the tests on this `only` suite should be run, so don't filter it.\n      if (onlySuite.hasOnly()) {\n        onlySuite.filterOnly();\n      }\n    }); // Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.\n\n\n    var onlySuites = this._onlySuites;\n    this.suites = this.suites.filter(function (childSuite) {\n      return onlySuites.indexOf(childSuite) !== -1 || childSuite.filterOnly();\n    });\n  } // Keep the suite only if there is something to run\n\n\n  return this.tests.length > 0 || this.suites.length > 0;\n};\n/**\n * Adds a suite to the list of subsuites marked `only`.\n *\n * @private\n * @param {Suite} suite\n */\n\n\nSuite.prototype.appendOnlySuite = function (suite) {\n  this._onlySuites.push(suite);\n};\n/**\n * Adds a test to the list of tests marked `only`.\n *\n * @private\n * @param {Test} test\n */\n\n\nSuite.prototype.appendOnlyTest = function (test) {\n  this._onlyTests.push(test);\n};\n/**\n * Returns the array of hooks by hook name; see `HOOK_TYPE_*` constants.\n * @private\n */\n\n\nSuite.prototype.getHooks = function getHooks(name) {\n  return this['_' + name];\n};\n/**\n * cleans all references from this suite and all child suites.\n */\n\n\nSuite.prototype.dispose = function () {\n  this.suites.forEach(function (suite) {\n    suite.dispose();\n  });\n  this.cleanReferences();\n};\n/**\n * Cleans up the references to all the deferred functions\n * (before/after/beforeEach/afterEach) and tests of a Suite.\n * These must be deleted otherwise a memory leak can happen,\n * as those functions may reference variables from closures,\n * thus those variables can never be garbage collected as long\n * as the deferred functions exist.\n *\n * @private\n */\n\n\nSuite.prototype.cleanReferences = function cleanReferences() {\n  function cleanArrReferences(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      delete arr[i].fn;\n    }\n  }\n\n  if (Array.isArray(this._beforeAll)) {\n    cleanArrReferences(this._beforeAll);\n  }\n\n  if (Array.isArray(this._beforeEach)) {\n    cleanArrReferences(this._beforeEach);\n  }\n\n  if (Array.isArray(this._afterAll)) {\n    cleanArrReferences(this._afterAll);\n  }\n\n  if (Array.isArray(this._afterEach)) {\n    cleanArrReferences(this._afterEach);\n  }\n\n  for (var i = 0; i < this.tests.length; i++) {\n    delete this.tests[i].fn;\n  }\n};\n\nvar constants = utils.defineConstants(\n/**\n * {@link Suite}-related constants.\n * @public\n * @memberof Suite\n * @alias constants\n * @readonly\n * @static\n * @enum {string}\n */\n{\n  /**\n   * Event emitted after a test file has been loaded Not emitted in browser.\n   */\n  EVENT_FILE_POST_REQUIRE: 'post-require',\n\n  /**\n   * Event emitted before a test file has been loaded. In browser, this is emitted once an interface has been selected.\n   */\n  EVENT_FILE_PRE_REQUIRE: 'pre-require',\n\n  /**\n   * Event emitted immediately after a test file has been loaded. Not emitted in browser.\n   */\n  EVENT_FILE_REQUIRE: 'require',\n\n  /**\n   * Event emitted when `global.run()` is called (use with `delay` option)\n   */\n  EVENT_ROOT_SUITE_RUN: 'run',\n\n  /**\n   * Namespace for collection of a `Suite`'s \"after all\" hooks\n   */\n  HOOK_TYPE_AFTER_ALL: 'afterAll',\n\n  /**\n   * Namespace for collection of a `Suite`'s \"after each\" hooks\n   */\n  HOOK_TYPE_AFTER_EACH: 'afterEach',\n\n  /**\n   * Namespace for collection of a `Suite`'s \"before all\" hooks\n   */\n  HOOK_TYPE_BEFORE_ALL: 'beforeAll',\n\n  /**\n   * Namespace for collection of a `Suite`'s \"before all\" hooks\n   */\n  HOOK_TYPE_BEFORE_EACH: 'beforeEach',\n  // the following events are all deprecated\n\n  /**\n   * Emitted after an \"after all\" `Hook` has been added to a `Suite`. Deprecated\n   */\n  EVENT_SUITE_ADD_HOOK_AFTER_ALL: 'afterAll',\n\n  /**\n   * Emitted after an \"after each\" `Hook` has been added to a `Suite` Deprecated\n   */\n  EVENT_SUITE_ADD_HOOK_AFTER_EACH: 'afterEach',\n\n  /**\n   * Emitted after an \"before all\" `Hook` has been added to a `Suite` Deprecated\n   */\n  EVENT_SUITE_ADD_HOOK_BEFORE_ALL: 'beforeAll',\n\n  /**\n   * Emitted after an \"before each\" `Hook` has been added to a `Suite` Deprecated\n   */\n  EVENT_SUITE_ADD_HOOK_BEFORE_EACH: 'beforeEach',\n\n  /**\n   * Emitted after a child `Suite` has been added to a `Suite`. Deprecated\n   */\n  EVENT_SUITE_ADD_SUITE: 'suite',\n\n  /**\n   * Emitted after a `Test` has been added to a `Suite`. Deprecated\n   */\n  EVENT_SUITE_ADD_TEST: 'test'\n});\n/**\n * @summary There are no known use cases for these events.\n * @desc This is a `Set`-like object having all keys being the constant's string value and the value being `true`.\n * @todo Remove eventually\n * @type {Object<string,boolean>}\n * @ignore\n */\n\nvar deprecatedEvents = Object.keys(constants).filter(function (constant) {\n  return constant.substring(0, 15) === 'EVENT_SUITE_ADD';\n}).reduce(function (acc, constant) {\n  acc[constants[constant]] = true;\n  return acc;\n}, utils.createMap());\nSuite.constants = constants;","map":{"version":3,"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/mocha/lib/suite.js"],"names":["EventEmitter","require","Hook","utils","inherits","debug","milliseconds","errors","createInvalidArgumentTypeError","exports","module","Suite","create","parent","title","suite","ctx","fullTitle","addSuite","parentContext","isRoot","isString","Context","prototype","suites","tests","root","pending","_retries","_beforeEach","_beforeAll","_afterEach","_afterAll","_timeout","_enableTimeouts","_slow","_bail","_onlyTests","_onlySuites","reset","on","event","deprecatedEvents","deprecate","delayed","doReset","thingToReset","forEach","clone","timeout","retries","enableTimeouts","slow","bail","ms","arguments","length","toString","parseInt","n","enabled","isPending","_createHook","fn","hook","file","beforeAll","name","push","emit","constants","EVENT_SUITE_ADD_HOOK_BEFORE_ALL","afterAll","EVENT_SUITE_ADD_HOOK_AFTER_ALL","beforeEach","EVENT_SUITE_ADD_HOOK_BEFORE_EACH","afterEach","EVENT_SUITE_ADD_HOOK_AFTER_EACH","EVENT_SUITE_ADD_SUITE","addTest","test","EVENT_SUITE_ADD_TEST","titlePath","join","result","concat","total","reduce","sum","eachTest","run","EVENT_ROOT_SUITE_RUN","hasOnly","some","filterOnly","onlySuite","onlySuites","filter","childSuite","indexOf","appendOnlySuite","appendOnlyTest","getHooks","dispose","cleanReferences","cleanArrReferences","arr","i","Array","isArray","defineConstants","EVENT_FILE_POST_REQUIRE","EVENT_FILE_PRE_REQUIRE","EVENT_FILE_REQUIRE","HOOK_TYPE_AFTER_ALL","HOOK_TYPE_AFTER_EACH","HOOK_TYPE_BEFORE_ALL","HOOK_TYPE_BEFORE_EACH","Object","keys","constant","substring","acc","createMap"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\nvar EventEmitter = require('events').EventEmitter;\nvar Hook = require('./hook');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\nvar debug = require('debug')('mocha:suite');\nvar milliseconds = require('ms');\nvar errors = require('./errors');\nvar createInvalidArgumentTypeError = errors.createInvalidArgumentTypeError;\n\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n\n/**\n * Create a new `Suite` with the given `title` and parent `Suite`.\n *\n * @public\n * @param {Suite} parent - Parent suite (required!)\n * @param {string} title - Title\n * @return {Suite}\n */\nSuite.create = function(parent, title) {\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n\n/**\n * Constructs a new `Suite` instance with the given `title`, `ctx`, and `isRoot`.\n *\n * @public\n * @class\n * @extends EventEmitter\n * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}\n * @param {string} title - Suite title.\n * @param {Context} parentContext - Parent context instance.\n * @param {boolean} [isRoot=false] - Whether this is the root suite.\n */\nfunction Suite(title, parentContext, isRoot) {\n  if (!utils.isString(title)) {\n    throw createInvalidArgumentTypeError(\n      'Suite argument \"title\" must be a string. Received type \"' +\n        typeof title +\n        '\"',\n      'title',\n      'string'\n    );\n  }\n  this.title = title;\n  function Context() {}\n  Context.prototype = parentContext;\n  this.ctx = new Context();\n  this.suites = [];\n  this.tests = [];\n  this.root = isRoot === true;\n  this.pending = false;\n  this._retries = -1;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this._onlyTests = [];\n  this._onlySuites = [];\n  this.reset();\n\n  this.on('newListener', function(event) {\n    if (deprecatedEvents[event]) {\n      utils.deprecate(\n        'Event \"' +\n          event +\n          '\" is deprecated.  Please let the Mocha team know about your use case: https://git.io/v6Lwm'\n      );\n    }\n  });\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Suite, EventEmitter);\n\n/**\n * Resets the state initially or for a next run.\n */\nSuite.prototype.reset = function() {\n  this.delayed = false;\n  function doReset(thingToReset) {\n    thingToReset.reset();\n  }\n  this.suites.forEach(doReset);\n  this.tests.forEach(doReset);\n  this._beforeEach.forEach(doReset);\n  this._afterEach.forEach(doReset);\n  this._beforeAll.forEach(doReset);\n  this._afterAll.forEach(doReset);\n};\n\n/**\n * Return a clone of this `Suite`.\n *\n * @private\n * @return {Suite}\n */\nSuite.prototype.clone = function() {\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.root = this.root;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n\n/**\n * Set or get timeout `ms` or short-hand such as \"2s\".\n *\n * @private\n * @todo Do not attempt to set value if `ms` is undefined\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms.toString() === '0') {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n\n/**\n * Set or get number of times to retry a failed test.\n *\n * @private\n * @param {number|string} n\n * @return {Suite|number} for chaining\n */\nSuite.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  debug('retries %d', n);\n  this._retries = parseInt(n, 10) || 0;\n  return this;\n};\n\n/**\n * Set or get timeout to `enabled`.\n *\n * @private\n * @param {boolean} enabled\n * @return {Suite|boolean} self or enabled\n */\nSuite.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Set or get slow `ms` or short-hand such as \"2s\".\n *\n * @private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.slow = function(ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set or get whether to bail after first error.\n *\n * @private\n * @param {boolean} bail\n * @return {Suite|number} for chaining\n */\nSuite.prototype.bail = function(bail) {\n  if (!arguments.length) {\n    return this._bail;\n  }\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n\n/**\n * Check if this suite or its parent suite is marked as pending.\n *\n * @private\n */\nSuite.prototype.isPending = function() {\n  return this.pending || (this.parent && this.parent.isPending());\n};\n\n/**\n * Generic hook-creator.\n * @private\n * @param {string} title - Title of hook\n * @param {Function} fn - Hook callback\n * @returns {Hook} A new hook\n */\nSuite.prototype._createHook = function(title, fn) {\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  hook.file = this.file;\n  return hook;\n};\n\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeAll = function(title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n  this._beforeAll.push(hook);\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_ALL, hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterAll = function(title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n  this._afterAll.push(hook);\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_ALL, hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeEach = function(title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n  this._beforeEach.push(hook);\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_EACH, hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterEach = function(title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n  var hook = this._createHook(title, fn);\n  this._afterEach.push(hook);\n  this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_EACH, hook);\n  return this;\n};\n\n/**\n * Add a test `suite`.\n *\n * @private\n * @param {Suite} suite\n * @return {Suite} for chaining\n */\nSuite.prototype.addSuite = function(suite) {\n  suite.parent = this;\n  suite.root = false;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit(constants.EVENT_SUITE_ADD_SUITE, suite);\n  return this;\n};\n\n/**\n * Add a `test` to this suite.\n *\n * @private\n * @param {Test} test\n * @return {Suite} for chaining\n */\nSuite.prototype.addTest = function(test) {\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.retries(this.retries());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit(constants.EVENT_SUITE_ADD_TEST, test);\n  return this;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Suite\n * @public\n * @return {string}\n */\nSuite.prototype.fullTitle = function() {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by recursively concatenating the parent's\n * title path.\n *\n * @memberof Suite\n * @public\n * @return {string}\n */\nSuite.prototype.titlePath = function() {\n  var result = [];\n  if (this.parent) {\n    result = result.concat(this.parent.titlePath());\n  }\n  if (!this.root) {\n    result.push(this.title);\n  }\n  return result;\n};\n\n/**\n * Return the total number of tests.\n *\n * @memberof Suite\n * @public\n * @return {number}\n */\nSuite.prototype.total = function() {\n  return (\n    this.suites.reduce(function(sum, suite) {\n      return sum + suite.total();\n    }, 0) + this.tests.length\n  );\n};\n\n/**\n * Iterates through each suite recursively to find all tests. Applies a\n * function in the format `fn(test)`.\n *\n * @private\n * @param {Function} fn\n * @return {Suite}\n */\nSuite.prototype.eachTest = function(fn) {\n  this.tests.forEach(fn);\n  this.suites.forEach(function(suite) {\n    suite.eachTest(fn);\n  });\n  return this;\n};\n\n/**\n * This will run the root suite if we happen to be running in delayed mode.\n * @private\n */\nSuite.prototype.run = function run() {\n  if (this.root) {\n    this.emit(constants.EVENT_ROOT_SUITE_RUN);\n  }\n};\n\n/**\n * Determines whether a suite has an `only` test or suite as a descendant.\n *\n * @private\n * @returns {Boolean}\n */\nSuite.prototype.hasOnly = function hasOnly() {\n  return (\n    this._onlyTests.length > 0 ||\n    this._onlySuites.length > 0 ||\n    this.suites.some(function(suite) {\n      return suite.hasOnly();\n    })\n  );\n};\n\n/**\n * Filter suites based on `isOnly` logic.\n *\n * @private\n * @returns {Boolean}\n */\nSuite.prototype.filterOnly = function filterOnly() {\n  if (this._onlyTests.length) {\n    // If the suite contains `only` tests, run those and ignore any nested suites.\n    this.tests = this._onlyTests;\n    this.suites = [];\n  } else {\n    // Otherwise, do not run any of the tests in this suite.\n    this.tests = [];\n    this._onlySuites.forEach(function(onlySuite) {\n      // If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.\n      // Otherwise, all of the tests on this `only` suite should be run, so don't filter it.\n      if (onlySuite.hasOnly()) {\n        onlySuite.filterOnly();\n      }\n    });\n    // Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.\n    var onlySuites = this._onlySuites;\n    this.suites = this.suites.filter(function(childSuite) {\n      return onlySuites.indexOf(childSuite) !== -1 || childSuite.filterOnly();\n    });\n  }\n  // Keep the suite only if there is something to run\n  return this.tests.length > 0 || this.suites.length > 0;\n};\n\n/**\n * Adds a suite to the list of subsuites marked `only`.\n *\n * @private\n * @param {Suite} suite\n */\nSuite.prototype.appendOnlySuite = function(suite) {\n  this._onlySuites.push(suite);\n};\n\n/**\n * Adds a test to the list of tests marked `only`.\n *\n * @private\n * @param {Test} test\n */\nSuite.prototype.appendOnlyTest = function(test) {\n  this._onlyTests.push(test);\n};\n\n/**\n * Returns the array of hooks by hook name; see `HOOK_TYPE_*` constants.\n * @private\n */\nSuite.prototype.getHooks = function getHooks(name) {\n  return this['_' + name];\n};\n\n/**\n * cleans all references from this suite and all child suites.\n */\nSuite.prototype.dispose = function() {\n  this.suites.forEach(function(suite) {\n    suite.dispose();\n  });\n  this.cleanReferences();\n};\n\n/**\n * Cleans up the references to all the deferred functions\n * (before/after/beforeEach/afterEach) and tests of a Suite.\n * These must be deleted otherwise a memory leak can happen,\n * as those functions may reference variables from closures,\n * thus those variables can never be garbage collected as long\n * as the deferred functions exist.\n *\n * @private\n */\nSuite.prototype.cleanReferences = function cleanReferences() {\n  function cleanArrReferences(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      delete arr[i].fn;\n    }\n  }\n\n  if (Array.isArray(this._beforeAll)) {\n    cleanArrReferences(this._beforeAll);\n  }\n\n  if (Array.isArray(this._beforeEach)) {\n    cleanArrReferences(this._beforeEach);\n  }\n\n  if (Array.isArray(this._afterAll)) {\n    cleanArrReferences(this._afterAll);\n  }\n\n  if (Array.isArray(this._afterEach)) {\n    cleanArrReferences(this._afterEach);\n  }\n\n  for (var i = 0; i < this.tests.length; i++) {\n    delete this.tests[i].fn;\n  }\n};\n\nvar constants = utils.defineConstants(\n  /**\n   * {@link Suite}-related constants.\n   * @public\n   * @memberof Suite\n   * @alias constants\n   * @readonly\n   * @static\n   * @enum {string}\n   */\n  {\n    /**\n     * Event emitted after a test file has been loaded Not emitted in browser.\n     */\n    EVENT_FILE_POST_REQUIRE: 'post-require',\n    /**\n     * Event emitted before a test file has been loaded. In browser, this is emitted once an interface has been selected.\n     */\n    EVENT_FILE_PRE_REQUIRE: 'pre-require',\n    /**\n     * Event emitted immediately after a test file has been loaded. Not emitted in browser.\n     */\n    EVENT_FILE_REQUIRE: 'require',\n    /**\n     * Event emitted when `global.run()` is called (use with `delay` option)\n     */\n    EVENT_ROOT_SUITE_RUN: 'run',\n\n    /**\n     * Namespace for collection of a `Suite`'s \"after all\" hooks\n     */\n    HOOK_TYPE_AFTER_ALL: 'afterAll',\n    /**\n     * Namespace for collection of a `Suite`'s \"after each\" hooks\n     */\n    HOOK_TYPE_AFTER_EACH: 'afterEach',\n    /**\n     * Namespace for collection of a `Suite`'s \"before all\" hooks\n     */\n    HOOK_TYPE_BEFORE_ALL: 'beforeAll',\n    /**\n     * Namespace for collection of a `Suite`'s \"before all\" hooks\n     */\n    HOOK_TYPE_BEFORE_EACH: 'beforeEach',\n\n    // the following events are all deprecated\n\n    /**\n     * Emitted after an \"after all\" `Hook` has been added to a `Suite`. Deprecated\n     */\n    EVENT_SUITE_ADD_HOOK_AFTER_ALL: 'afterAll',\n    /**\n     * Emitted after an \"after each\" `Hook` has been added to a `Suite` Deprecated\n     */\n    EVENT_SUITE_ADD_HOOK_AFTER_EACH: 'afterEach',\n    /**\n     * Emitted after an \"before all\" `Hook` has been added to a `Suite` Deprecated\n     */\n    EVENT_SUITE_ADD_HOOK_BEFORE_ALL: 'beforeAll',\n    /**\n     * Emitted after an \"before each\" `Hook` has been added to a `Suite` Deprecated\n     */\n    EVENT_SUITE_ADD_HOOK_BEFORE_EACH: 'beforeEach',\n    /**\n     * Emitted after a child `Suite` has been added to a `Suite`. Deprecated\n     */\n    EVENT_SUITE_ADD_SUITE: 'suite',\n    /**\n     * Emitted after a `Test` has been added to a `Suite`. Deprecated\n     */\n    EVENT_SUITE_ADD_TEST: 'test'\n  }\n);\n\n/**\n * @summary There are no known use cases for these events.\n * @desc This is a `Set`-like object having all keys being the constant's string value and the value being `true`.\n * @todo Remove eventually\n * @type {Object<string,boolean>}\n * @ignore\n */\nvar deprecatedEvents = Object.keys(constants)\n  .filter(function(constant) {\n    return constant.substring(0, 15) === 'EVENT_SUITE_ADD';\n  })\n  .reduce(function(acc, constant) {\n    acc[constants[constant]] = true;\n    return acc;\n  }, utils.createMap());\n\nSuite.constants = constants;\n"]},"metadata":{},"sourceType":"script"}