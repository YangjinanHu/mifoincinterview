{"ast":null,"code":"import { getGlobalObject, logger } from '@sentry/utils';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\n\nexport function registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', function () {\n      var activeTransaction = getActiveTransaction();\n\n      if (global.document.hidden && activeTransaction) {\n        logger.log(\"[Tracing] Transaction: \" + SpanStatus.Cancelled + \" -> since tab moved to the background, op: \" + activeTransaction.op); // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(SpanStatus.Cancelled);\n        }\n\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,eAAT,EAA0BC,MAA1B,QAAwC,eAAxC;AAGA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,oBAAT,QAAqC,UAArC;AAEA,IAAMC,MAAM,GAAGJ,eAAe,EAA9B;AAEA;;;;;AAIA,OAAM,SAAUK,8BAAV,GAAwC;AAC5C,MAAID,MAAM,IAAIA,MAAM,CAACE,QAArB,EAA+B;AAC7BF,UAAM,CAACE,QAAP,CAAgBC,gBAAhB,CAAiC,kBAAjC,EAAqD;AACnD,UAAMC,iBAAiB,GAAGL,oBAAoB,EAA9C;;AACA,UAAIC,MAAM,CAACE,QAAP,CAAgBG,MAAhB,IAA0BD,iBAA9B,EAAiD;AAC/CP,cAAM,CAACS,GAAP,CACE,4BAA0BR,UAAU,CAACS,SAArC,GAA8C,6CAA9C,GAA4FH,iBAAiB,CAACI,EADhH,EAD+C,CAI/C;AACA;;AACA,YAAI,CAACJ,iBAAiB,CAACK,MAAvB,EAA+B;AAC7BL,2BAAiB,CAACM,SAAlB,CAA4BZ,UAAU,CAACS,SAAvC;AACD;;AACDH,yBAAiB,CAACO,MAAlB,CAAyB,kBAAzB,EAA6C,iBAA7C;AACAP,yBAAiB,CAACQ,MAAlB;AACD;AACF,KAdD;AAeD,GAhBD,MAgBO;AACLf,UAAM,CAACgB,IAAP,CAAY,oFAAZ;AACD;AACF","names":["getGlobalObject","logger","SpanStatus","getActiveTransaction","global","registerBackgroundTabDetection","document","addEventListener","activeTransaction","hidden","log","Cancelled","op","status","setStatus","setTag","finish","warn"],"sources":["/Users/huyangjinan/Columbia/Blockchain/FinalProject/ELEN6883-final-project/node_modules/@sentry/tracing/src/browser/backgroundtab.ts"],"sourcesContent":["import { getGlobalObject, logger } from '@sentry/utils';\n\nimport { IdleTransaction } from '../idletransaction';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction } from '../utils';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (global.document.hidden && activeTransaction) {\n        logger.log(\n          `[Tracing] Transaction: ${SpanStatus.Cancelled} -> since tab moved to the background, op: ${activeTransaction.op}`,\n        );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(SpanStatus.Cancelled);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}